# Prerequisites for this action:
# - need to enable "improved container support":
#   https://docs.github.com/en/packages/guides/enabling-improved-container-support
# - need to add an access token to secrets (in this case called CR_PAT), probably good to do this
#   at organisation level. This access token needs to be a personal access token at the time of
#   writing. This works, because the organisation policy gives organisation members permission to
#   publish packages.
#   Note this outstanding issue:
#   https://github.community/t/cannot-create-pat-with-scope-write-packages-without-repo-scope/154300
# - looks like you'll need to manually make the published image public by visiting:
#   https://github.com/orgs/{{ your organisation }}/packages

# TODO: create a tag/release with the version based on the version in package.json every time a
# merge is made to master? Prevent any merges to master without a code change? (That's probably
# tricky- what to do about documentation changes etc.? Perhaps build the container image, see if
# the checksum is the same as the existing one, and prevent pushes to master that change the
# container checksum without changing the package.json version?).

# TODO:
# - delete created images from the repository when a release is deleted/unpublished?

name: Publish image

# on:
#   # The build will run on all of the following event types, however an image will _only_ be
#   # published for a release.
#   release:
#     types: [published]

on:
  workflow_call:
    inputs:
      RELEASE_VERSION:
        description: 'Release version, e.g. v{{version}}'
        type: string
        required: true
      RELEASE_LABEL:
        description: 'Release label, e.g. latest, snapshot'
        type: string
        default: latest
        required: false
      RELEASE_URL:
        description: 'Image Repository'
        type: string
        required: false
      REPOSITORY:
        description: 'Image Repository'
        type: string
        default: ghcr.io
        required: false
      IMAGE:
        description: 'Image Repository'
        type: string
        default: ${{ github.repository }}
        required: false
      VENDOR:
        description: 'Image Repository'
        type: string
        default: ModusBox Inc.
        required: false
      LICENSE:
        description: 'Image Repository'
        type: string
        default: Apache-2.0
        required: false
      PROJECT:
        description: 'Name of project'
        type: string
        required: false
        default: ${{ github.repository }}
      JOB_URL:
        description: 'URL for Job'
        type: string
        required: false
        default: ${{ github.server_url }}/${{ github.repository }}/runs/${{ github.run_id }}
      CHANGE_URL:
        description: 'URL for commit or pr'
        type: string
        required: false
        default: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}
      TYPE:
        description: 'Type of release Notification, e.g. Tag, Github, NPM, Docker, etc'
        type: string
        required: false
        default: Publish Image
      CONDITION:
        description: 'Github step condition, e.g. success, failure, always'
        type: string
        required: false
        default: always
    secrets:
      USER:
        description: 'REPOSITORY User'
        required: true
      PASSWORD:
        description: 'REPOSITORY Password'
        required: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.RELEASE_VERSION }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          labels: |
            org.opencontainers.image.vendor=${{ inputs.VENDOR }}
            org.opencontainers.image.licenses=${{ inputs.LICENSE }}
            org.opencontainers.image.version=${{ inputs.RELEASE_VERSION }}
            org.opencontainers.image.source=${{ inputs.RELEASE_URL }}
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.REPOSITORY }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: Dockerfile
          tags: ${{ inputs.REPOSITORY }}/${{ inputs.IMAGE }}:${{ inputs.RELEASE_LABEL }},${{ inputs.REPOSITORY }}/${{ inputs.IMAGE }}:${{ inputs.RELEASE_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Post to a Slack channel
        if: ${{ github.action_status == inputs.CONDITION || inputs.CONDITION == 'always' }}
        id: slack
        uses: slackapi/slack-github-action@v1.19.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: ${{ secrets.SLACK_CHANEL }}
          # For posting a rich message using Block Kit
          payload: |
            {
              "attachments": [
                {
                  "color": "#5abc54",
                  "blocks": [
                      {
                          "type": "header",
                          "text": {
                              "type": "plain_text",
                              "text": "${{ inputs.PROJECT }}",
                              "emoji": true
                          }
                      },
                      {
                          "type": "divider"
                      },
                      {
                          "type": "section",
                          "text": {
                              "type": "mrkdwn",
                              "text": "Type: `${{ inputs.TYPE }}`\nTag: `${{ inputs.RELEASE_VERSION }}`"
                          }
                      },
                      {
                          "type": "section",
                          "text": {
                              "type": "mrkdwn",
                              "text": ":shipit: ${{ inputs.RELEASE_URL }}"
                          }
                      },
                      {
                          "type": "section",
                          "text": {
                              "type": "mrkdwn",
                              "text": "Status: *${{ job.status }}* @ ${{ inputs.CHANGE_URL }}"
                          },
                          "accessory": {
                              "type": "button",
                              "text": {
                                  "type": "plain_text",
                                  "text": "View",
                                  "emoji": true
                              },
                              "value": "visit_job_btn",
                              "url": "${{ inputs.JOB_URL }}",
                              "action_id": "button-action"
                          }
                      },
                      {
                          "type": "divider"
                      },
                      {
                          "type": "section",
                          "text": {
                              "type": "mrkdwn",
                              "text": "${{ inputs.CUSTOM_MSG }} "
                          }
                      }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}