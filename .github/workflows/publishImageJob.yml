# Prerequisites for this action:
# - need to enable "improved container support":
#   https://docs.github.com/en/packages/guides/enabling-improved-container-support
# - need to add an access token to secrets (in this case called CR_PAT), probably good to do this
#   at organisation level. This access token needs to be a personal access token at the time of
#   writing. This works, because the organisation policy gives organisation members permission to
#   publish packages.
#   Note this outstanding issue:
#   https://github.community/t/cannot-create-pat-with-scope-write-packages-without-repo-scope/154300
# - looks like you'll need to manually make the published image public by visiting:
#   https://github.com/orgs/{{ your organisation }}/packages

# TODO: create a tag/release with the version based on the version in package.json every time a
# merge is made to master? Prevent any merges to master without a code change? (That's probably
# tricky- what to do about documentation changes etc.? Perhaps build the container image, see if
# the checksum is the same as the existing one, and prevent pushes to master that change the
# container checksum without changing the package.json version?).

# TODO:
# - delete created images from the repository when a release is deleted/unpublished?

name: Publish image

# on:
#   # The build will run on all of the following event types, however an image will _only_ be
#   # published for a release.
#   release:
#     types: [published]

on:
  workflow_call:
    inputs:
      RELEASE_VERSION:
        description: 'Release information, e.g. v{{version}}'
        type: string
        required: true
    secrets:
      GH_TOKEN:
        description: 'Github API Token'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.RELEASE_VERSION }}
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
