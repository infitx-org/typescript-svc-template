name: Create Release Tag Job

on:
  workflow_call:
    secrets:
      GIT_KEY:
        description: 'SSH Private Key'
        required: true
      GIT_USER:
        description: 'User identifier'
        required: true
      GIT_EMAIL:
        description: 'User email address'
        required: true
    outputs:
      VERSION:
        description: "Tagged release version"
        value: ${{ jobs.release.outputs.VERSION }}
      RELEASE_CHANGE_ARTEFACT:
        description: "Uploaded Artefact containing the Changelog diff between releases"
        value: ${{ jobs.release.outputs.ARTEFACT_NAME }}
      RELEASE_CHANGE_FILENAME:
        description: "Uploaded Artefact containing the Changelog diff between releases"
        value: ${{ jobs.release.outputs.ARTEFACT_FILE }}

env:
  ARTEFACT_NAME: release-changes
  ARTEFACT_FILE: changes

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.output-changes.outputs.version }}
      ARTEFACT_NAME: ${{ steps.output-changes.outputs.changes }}
      ARTEFACT_FILE: ${{ steps.output-changes.outputs.file }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt install -y jq
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT_KEY }}
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node@${{ steps.nvm.outputs.NVMRC }}
        uses: actions/setup-node@v3
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
      - name: Configure git
        run: | 
          git config user.email $GIT_EMAIL
          git config user.name $GIT_USER
        env:
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          GIT_USER: ${{ secrets.GIT_USER }}
      - name: Create the release
        run: |
          npm ci
          npm run release
      - name: Fetch changelog
        run: |
          git diff --no-indent-heuristic main~1 HEAD CHANGELOG.md | sed -n '/^+[^+]/ s/^+//p' > /tmp/${{ env.ARTEFACT_FILE }}

          echo 'RELEASE_CHANGES<<EOF' >> $GITHUB_ENV
          cat /tmp/${{ env.ARTEFACT_FILE }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

          echo "RELEASE_TAG=$(cat package-lock.json | jq -r .version)" >> $GITHUB_ENV
      - name: Release info
        run: |
          echo "CHANGES INCLUDED IN THIS TAGGED RELEASE:"
          cat /tmp/${{ env.ARTEFACT_FILE }}
          echo "------------------------------"
          echo "RELEASE_CHANGES=$RELEASE_CHANGES"
          echo "RELEASE_TAG=$RELEASE_TAG"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTEFACT_NAME }}
          path: |
            /tmp/${{ env.ARTEFACT_FILE }}
            CHANGELOG.md
          if-no-files-found: error
      - name: Push the release @ v${{ env.RELEASE_TAG }}
        run: |
          git push --follow-tags
      - name: Set Outputs 
        id: output-changes
        run: |
          echo "::set-output name=version::${{ env.RELEASE_TAG }}"
          echo "::set-output name=changes::${{ env.ARTEFACT_NAME }}"
          echo "::set-output name=file::${{ env.ARTEFACT_FILE }}"
      - name: Print Outputs
        run: |
          echo "VERSION: ${{ steps.output-changes.outputs.version }}"
          echo "RELEASE_CHANGE_ARTEFACT: ${{ steps.output-changes.outputs.changes }}"
          echo "RELEASE_CHANGE_FILENAME: ${{ steps.output-changes.outputs.file }}"
